type Query {
    findBookById(id: ID): Book
    findAuthorById(id: ID): Author
}

type Mutation {
    createAuthor(input: CreateAuthorInput): CreateAuthorPayload
    updateAuthorName(input: UpdateAuthorNameInput): UpdateAuthorNamePayload
    createBook(book: CreateBookInput): CreateBookPayload
    updateBookName(input: UpdateBookNameInput): UpdateBookNamePayload
}

type Book {
    id: ID!
    name: String
    pageCount: Int
    authors: [Author]
    version: Int
}

type Author {
    id: ID!
    name: String
    version: Int
}


input CreateAuthorInput {
    name: String!
}

input UpdateAuthorNameInput {
    id: ID!
    name: String
    version: Int!
}

type UpdateAuthorNamePayload {
    author: Author
}

input CreateBookInput {
    name: String!
    pageCount: Int
    authors: [ID!]!
}

type CreateAuthorPayload {
    author: Author
}

type CreateBookPayload {
    book: Book
}

input UpdateBookNameInput {
    id: ID!
    name: String
    version: Int!
}

type UpdateBookNamePayload {
    book: Book
}